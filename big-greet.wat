(component
  (type (;0;)
    (component
      (type (;0;)
        (instance
          (type (;0;) u32)
          (export (;1;) "input-stream" (type (eq 0)))
          (type (;2;) (func (param "this" 1)))
          (export (;0;) "drop-input-stream" (func (type 2)))
          (type (;3;) u32)
          (export (;4;) "output-stream" (type (eq 3)))
          (type (;5;) (record))
          (export (;6;) "stream-error" (type (eq 5)))
          (type (;7;) (list u8))
          (type (;8;) (result u64 (error 6)))
          (type (;9;) (func (param "this" 4) (param "buf" 7) (result 8)))
          (export (;1;) "write" (func (type 9)))
          (type (;10;) (func (param "this" 4)))
          (export (;2;) "drop-output-stream" (func (type 10)))
        )
      )
      (import "streams" "path:/io/streams/streams" (instance (type 0)))
      (type (;1;)
        (instance
          (type (;0;) u32)
          (export (;1;) "descriptor" (type (eq 0)))
          (type (;2;) u64)
          (export (;3;) "filesize" (type (eq 2)))
          (type (;4;) u32)
          (export (;5;) "output-stream" (type (eq 4)))
          (type (;6;) (func (param "this" 1) (param "offset" 3) (result 5)))
          (export (;0;) "write-via-stream" (func (type 6)))
          (type (;7;) (func (param "this" 1) (result 5)))
          (export (;1;) "append-via-stream" (func (type 7)))
          (type (;8;) (enum "unknown" "block-device" "character-device" "directory" "fifo" "symbolic-link" "regular-file" "socket"))
          (export (;9;) "descriptor-type" (type (eq 8)))
          (type (;10;) (enum "access" "would-block" "already" "bad-descriptor" "busy" "deadlock" "quota" "exist" "file-too-large" "illegal-byte-sequence" "in-progress" "interrupted" "invalid" "io" "is-directory" "loop" "too-many-links" "message-size" "name-too-long" "no-device" "no-entry" "no-lock" "insufficient-memory" "insufficient-space" "not-directory" "not-empty" "not-recoverable" "unsupported" "no-tty" "no-such-device" "overflow" "not-permitted" "pipe" "read-only" "invalid-seek" "text-file-busy" "cross-device"))
          (export (;11;) "error-code" (type (eq 10)))
          (type (;12;) (result 9 (error 11)))
          (type (;13;) (func (param "this" 1) (result 12)))
          (export (;2;) "get-type" (func (type 13)))
          (type (;14;) (func (param "this" 1)))
          (export (;3;) "drop-descriptor" (func (type 14)))
        )
      )
      (import "filesystem" "path:/filesystem/filesystem/filesystem" (instance (type 1)))
      (type (;2;)
        (instance
          (type (;0;) (tuple string string))
          (type (;1;) (list 0))
          (type (;2;) (func (result 1)))
          (export (;0;) "get-environment" (func (type 2)))
        )
      )
      (import "environment" "path:/wasi-base/environment/environment" (instance (type 2)))
      (type (;3;)
        (instance
          (type (;0;) u32)
          (export (;1;) "input-stream" (type (eq 0)))
          (type (;2;) u32)
          (export (;3;) "output-stream" (type (eq 2)))
          (type (;4;) (record (field "stdin" 1) (field "stdout" 3) (field "stderr" 3)))
          (export (;5;) "stdio-preopens" (type (eq 4)))
          (type (;6;) (func (result 5)))
          (export (;0;) "get-stdio" (func (type 6)))
          (type (;7;) u32)
          (export (;8;) "descriptor" (type (eq 7)))
          (type (;9;) (tuple 8 string))
          (type (;10;) (list 9))
          (type (;11;) (func (result 10)))
          (export (;1;) "get-directories" (func (type 11)))
        )
      )
      (import "preopens" "path:/wasi-base/preopens/preopens" (instance (type 3)))
      (type (;4;)
        (instance
          (type (;0;) (result))
          (type (;1;) (func (param "status" 0)))
          (export (;0;) "exit" (func (type 1)))
        )
      )
      (import "exit" "path:/wasi-base/exit/wasi-exit" (instance (type 4)))
      (type (;5;) (func (param "name" string) (result string)))
      (export (;0;) "hello-world" (func (type 5)))
    )
  )
  (import "hello" (component (;0;) (type 0)))
  (type (;1;)
    (component
      (type (;0;)
        (instance
          (type (;0;) u32)
          (export (;1;) "input-stream" (type (eq 0)))
          (type (;2;) (func (param "this" 1)))
          (export (;0;) "drop-input-stream" (func (type 2)))
          (type (;3;) u32)
          (export (;4;) "output-stream" (type (eq 3)))
          (type (;5;) (record))
          (export (;6;) "stream-error" (type (eq 5)))
          (type (;7;) (list u8))
          (type (;8;) (result u64 (error 6)))
          (type (;9;) (func (param "this" 4) (param "buf" 7) (result 8)))
          (export (;1;) "write" (func (type 9)))
          (type (;10;) (func (param "this" 4)))
          (export (;2;) "drop-output-stream" (func (type 10)))
        )
      )
      (import "streams" "path:/io/streams/streams" (instance (type 0)))
      (type (;1;)
        (instance
          (type (;0;) u32)
          (export (;1;) "descriptor" (type (eq 0)))
          (type (;2;) u64)
          (export (;3;) "filesize" (type (eq 2)))
          (type (;4;) u32)
          (export (;5;) "output-stream" (type (eq 4)))
          (type (;6;) (func (param "this" 1) (param "offset" 3) (result 5)))
          (export (;0;) "write-via-stream" (func (type 6)))
          (type (;7;) (func (param "this" 1) (result 5)))
          (export (;1;) "append-via-stream" (func (type 7)))
          (type (;8;) (enum "unknown" "block-device" "character-device" "directory" "fifo" "symbolic-link" "regular-file" "socket"))
          (export (;9;) "descriptor-type" (type (eq 8)))
          (type (;10;) (enum "access" "would-block" "already" "bad-descriptor" "busy" "deadlock" "quota" "exist" "file-too-large" "illegal-byte-sequence" "in-progress" "interrupted" "invalid" "io" "is-directory" "loop" "too-many-links" "message-size" "name-too-long" "no-device" "no-entry" "no-lock" "insufficient-memory" "insufficient-space" "not-directory" "not-empty" "not-recoverable" "unsupported" "no-tty" "no-such-device" "overflow" "not-permitted" "pipe" "read-only" "invalid-seek" "text-file-busy" "cross-device"))
          (export (;11;) "error-code" (type (eq 10)))
          (type (;12;) (result 9 (error 11)))
          (type (;13;) (func (param "this" 1) (result 12)))
          (export (;2;) "get-type" (func (type 13)))
          (type (;14;) (func (param "this" 1)))
          (export (;3;) "drop-descriptor" (func (type 14)))
        )
      )
      (import "filesystem" "path:/filesystem/filesystem/filesystem" (instance (type 1)))
      (type (;2;)
        (instance
          (type (;0;) (tuple string string))
          (type (;1;) (list 0))
          (type (;2;) (func (result 1)))
          (export (;0;) "get-environment" (func (type 2)))
        )
      )
      (import "environment" "path:/wasi-base/environment/environment" (instance (type 2)))
      (type (;3;)
        (instance
          (type (;0;) u32)
          (export (;1;) "input-stream" (type (eq 0)))
          (type (;2;) u32)
          (export (;3;) "output-stream" (type (eq 2)))
          (type (;4;) (record (field "stdin" 1) (field "stdout" 3) (field "stderr" 3)))
          (export (;5;) "stdio-preopens" (type (eq 4)))
          (type (;6;) (func (result 5)))
          (export (;0;) "get-stdio" (func (type 6)))
          (type (;7;) u32)
          (export (;8;) "descriptor" (type (eq 7)))
          (type (;9;) (tuple 8 string))
          (type (;10;) (list 9))
          (type (;11;) (func (result 10)))
          (export (;1;) "get-directories" (func (type 11)))
        )
      )
      (import "preopens" "path:/wasi-base/preopens/preopens" (instance (type 3)))
      (type (;4;)
        (instance
          (type (;0;) (result))
          (type (;1;) (func (param "status" 0)))
          (export (;0;) "exit" (func (type 1)))
        )
      )
      (import "exit" "path:/wasi-base/exit/wasi-exit" (instance (type 4)))
      (type (;5;) (func (param "name" string) (result string)))
      (import "hello-world" (func (type 5)))
      (export (;0;) "big-greet" (func (type 5)))
    )
  )
  (import "big" (component (;1;) (type 1)))
  (type (;2;)
    (instance
      (type (;0;) u32)
      (export (;1;) "input-stream" (type (eq 0)))
      (type (;2;) (func (param "this" 1)))
      (export (;0;) "drop-input-stream" (func (type 2)))
      (type (;3;) u32)
      (export (;4;) "output-stream" (type (eq 3)))
      (type (;5;) (record))
      (export (;6;) "stream-error" (type (eq 5)))
      (type (;7;) (list u8))
      (type (;8;) (result u64 (error 6)))
      (type (;9;) (func (param "this" 4) (param "buf" 7) (result 8)))
      (export (;1;) "write" (func (type 9)))
      (type (;10;) (func (param "this" 4)))
      (export (;2;) "drop-output-stream" (func (type 10)))
    )
  )
  (import "streams" "path:/io/streams/streams" (instance (;0;) (type 2)))
  (type (;3;)
    (instance
      (type (;0;) u32)
      (export (;1;) "descriptor" (type (eq 0)))
      (type (;2;) u64)
      (export (;3;) "filesize" (type (eq 2)))
      (type (;4;) u32)
      (export (;5;) "output-stream" (type (eq 4)))
      (type (;6;) (func (param "this" 1) (param "offset" 3) (result 5)))
      (export (;0;) "write-via-stream" (func (type 6)))
      (type (;7;) (func (param "this" 1) (result 5)))
      (export (;1;) "append-via-stream" (func (type 7)))
      (type (;8;) (enum "unknown" "block-device" "character-device" "directory" "fifo" "symbolic-link" "regular-file" "socket"))
      (export (;9;) "descriptor-type" (type (eq 8)))
      (type (;10;) (enum "access" "would-block" "already" "bad-descriptor" "busy" "deadlock" "quota" "exist" "file-too-large" "illegal-byte-sequence" "in-progress" "interrupted" "invalid" "io" "is-directory" "loop" "too-many-links" "message-size" "name-too-long" "no-device" "no-entry" "no-lock" "insufficient-memory" "insufficient-space" "not-directory" "not-empty" "not-recoverable" "unsupported" "no-tty" "no-such-device" "overflow" "not-permitted" "pipe" "read-only" "invalid-seek" "text-file-busy" "cross-device"))
      (export (;11;) "error-code" (type (eq 10)))
      (type (;12;) (result 9 (error 11)))
      (type (;13;) (func (param "this" 1) (result 12)))
      (export (;2;) "get-type" (func (type 13)))
      (type (;14;) (func (param "this" 1)))
      (export (;3;) "drop-descriptor" (func (type 14)))
    )
  )
  (import "filesystem" "path:/filesystem/filesystem/filesystem" (instance (;1;) (type 3)))
  (type (;4;)
    (instance
      (type (;0;) (tuple string string))
      (type (;1;) (list 0))
      (type (;2;) (func (result 1)))
      (export (;0;) "get-environment" (func (type 2)))
    )
  )
  (import "environment" "path:/wasi-base/environment/environment" (instance (;2;) (type 4)))
  (type (;5;)
    (instance
      (type (;0;) u32)
      (export (;1;) "input-stream" (type (eq 0)))
      (type (;2;) u32)
      (export (;3;) "output-stream" (type (eq 2)))
      (type (;4;) (record (field "stdin" 1) (field "stdout" 3) (field "stderr" 3)))
      (export (;5;) "stdio-preopens" (type (eq 4)))
      (type (;6;) (func (result 5)))
      (export (;0;) "get-stdio" (func (type 6)))
      (type (;7;) u32)
      (export (;8;) "descriptor" (type (eq 7)))
      (type (;9;) (tuple 8 string))
      (type (;10;) (list 9))
      (type (;11;) (func (result 10)))
      (export (;1;) "get-directories" (func (type 11)))
    )
  )
  (import "preopens" "path:/wasi-base/preopens/preopens" (instance (;3;) (type 5)))
  (type (;6;)
    (instance
      (type (;0;) (result))
      (type (;1;) (func (param "status" 0)))
      (export (;0;) "exit" (func (type 1)))
    )
  )
  (import "exit" "path:/wasi-base/exit/wasi-exit" (instance (;4;) (type 6)))
  (instance (;5;) (instantiate 0
      (with "streams" (instance 0))
      (with "filesystem" (instance 1))
      (with "environment" (instance 2))
      (with "preopens" (instance 3))
      (with "exit" (instance 4))
    )
  )
  (alias export 5 "hello-world" (func (;0;)))
  (instance (;6;) (instantiate 1
      (with "hello-world" (func 0))
      (with "streams" (instance 0))
      (with "filesystem" (instance 1))
      (with "environment" (instance 2))
      (with "preopens" (instance 3))
      (with "exit" (instance 4))
    )
  )
)